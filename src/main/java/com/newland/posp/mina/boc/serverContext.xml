<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

	<!--
		This makes it possible to specify java.net.SocketAddress values (e.g.
		:1234 below) as Strings. They will be converted into
		java.net.InetSocketAddress objects by Spring.
	-->
	<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="customEditors">
			<map>
				<entry key="java.net.SocketAddress">
					<bean class="org.apache.mina.integration.spring.InetSocketAddressEditor" />
				</entry>
			</map>
		</property>
	</bean>

	<!-- 主包体处理 -->
	<bean id="depotPosProtocolHandler" class="com.newland.posp.mina.boc.DepotPosProtocolHandler" >
		<property name="isoNacChannel">
			<ref bean="isoNacChannel"/>
		</property>
		<!-- 只需要通过IST，而不需要经过转发 -->
		<property name="isoResponseNotNeedToPosp">
			<list>
				<!-- 签到 -->
				<value type="java.lang.String">15</value>
			</list>
		</property>
		<property name="needToIso">
			<list>
				<value type="java.lang.String">13</value>
				<value type="java.lang.String">15</value>
				<value type="java.lang.String">18</value>
				<value type="java.lang.String">19</value>
			</list>
		</property>
		<property name="timeout">
			<value>60000</value>
		</property>
	</bean>
	
	
	
	
	
	
	<bean id="twicePosProtocalHandler" class="com.newland.posp.mina.boctchannel.TwicePosProtocalHandler" >
		<property name="keyGenerator">
			<bean class="com.newland.iso.ISOTerminalKeyGenerator">
				<property name="terminalIdField" value="41"/>
				<property name="traceNumberField" value="11"/>
			</bean>
		</property>
	</bean>

	<!-- 主包体解码工厂类 -->
	<bean id="depotPosProtocolCodecFactory" class="com.newland.posp.mina.boc.PosProtocolCodecFactory">
		<constructor-arg>
			<bean class="com.newland.posp.mina.boc.DepotPosProtocolEncoder" />
		</constructor-arg>
		<constructor-arg>
			<bean class="com.newland.posp.mina.boc.DepotPosProtocolDecoder" />
		</constructor-arg>
	</bean>

	<!-- IST返回解码工厂类 -->
	<bean id="istPosProtocolCodecFactory" class="com.newland.posp.mina.boc.PosProtocolCodecFactory">
		<constructor-arg>
			<bean class="com.newland.posp.mina.boc.IstPosProtocolEncoder" />
		</constructor-arg>
		<constructor-arg>
			<bean class="com.newland.posp.mina.boc.IstPosProtocolDecoder" />
		</constructor-arg>
	</bean>
	<bean id="twiceProtocolCodecFactory" class="com.newland.posp.mina.boc.PosProtocolCodecFactory">
		<constructor-arg>
			<bean class="com.newland.posp.mina.boctchannel.TwicePosProtocalEncoder" />
		</constructor-arg>
		<constructor-arg>
			<bean class="com.newland.posp.mina.boctchannel.TwicePosProtocolDecoder" />
		</constructor-arg>
	</bean>

	<!-- 主包体过滤器类 -->
	<bean id="depotFilterChainBuilder"
		class="org.apache.mina.integration.spring.DefaultIoFilterChainBuilderFactoryBean">
		<property name="filters">
			<list>
				<bean class="org.apache.mina.filter.codec.ProtocolCodecFilter">
					<constructor-arg ref="depotPosProtocolCodecFactory" />
				</bean>
				<bean class="org.apache.mina.filter.LoggingFilter" />
			</list>
		</property>
	</bean>
		<!-- The filter chain. a BillPos and a LoggingFilter -->
	<bean id="twiceFilterChainBuilder"
		class="org.apache.mina.integration.spring.DefaultIoFilterChainBuilderFactoryBean">
		<property name="filters">
			<list>
				<bean class="org.apache.mina.filter.codec.ProtocolCodecFilter">
					<constructor-arg ref="twiceProtocolCodecFactory" />
				</bean>
				<bean class="org.apache.mina.filter.LoggingFilter" />
			</list>
		</property>
	</bean>
	<!-- The filter chain. a BillPos and a LoggingFilter -->
	<bean id="isoFilterChainBuilder"
		class="org.apache.mina.integration.spring.DefaultIoFilterChainBuilderFactoryBean">
		<property name="filters">
			<list>
				<bean class="org.apache.mina.filter.codec.ProtocolCodecFilter">
					<constructor-arg ref="istPosProtocolCodecFactory" />
				</bean>
				<bean class="org.apache.mina.filter.LoggingFilter" />
			</list>
		</property>
	</bean>
	<!-- The IoAcceptor which binds to port 1234 -->
	<!-- bean id="posServer"
		class="org.apache.mina.integration.spring.IoAcceptorFactoryBean">
		<property name="target">
			<bean class="org.apache.mina.transport.socket.nio.SocketAcceptor" />
		</property>
		<property name="bindings">
			<list>
				<bean class="org.apache.mina.integration.spring.Binding">
					<property name="address" value=":6666" />
					<property name="handler" ref="twicePosProtocalHandler" />
					<property name="serviceConfig">
						<bean class="org.apache.mina.transport.socket.nio.SocketAcceptorConfig">
							<property name="filterChainBuilder" ref="twiceFilterChainBuilder" />
							<property name="reuseAddress" value="true" />
						</bean>
					</property>
				</bean>
			</list>
		</property>
	</bean-->
	
	<!-- 主包体监听 -->
	<bean id="posServer"
		class="org.apache.mina.integration.spring.IoAcceptorFactoryBean">
		<property name="target">
			<bean class="org.apache.mina.transport.socket.nio.SocketAcceptor" />
		</property>
		<property name="bindings">
			<list>
				<bean class="org.apache.mina.integration.spring.Binding">
					<property name="address" value=":6666" />
					<property name="handler" ref="depotPosProtocolHandler" />
					<property name="serviceConfig">
						<bean class="org.apache.mina.transport.socket.nio.SocketAcceptorConfig">
							<property name="filterChainBuilder" ref="depotFilterChainBuilder" />
							<property name="reuseAddress" value="true" />
						</bean>
					</property>
				</bean>
			</list>
		</property>
	</bean>	
	<!-- NAC通道 -->
	<bean id="isoNacChannel" class="com.newland.posp.channel.mina.MinaNacChannel">
		<property name="socketAddress" value="21.40.1.58:7878" />
		<property name="socketConnectorConfig">
			<bean class="org.apache.mina.transport.socket.nio.SocketConnectorConfig">
				<property name="filterChainBuilder" ref="isoFilterChainBuilder" />
			</bean>
		</property>
		<property name="messageKeyGenerator">
			<bean class="com.newland.iso.ISOTerminalKeyGenerator">
				<property name="terminalIdField" value="41"/>
				<property name="traceNumberField" value="11"/>
			</bean>
		</property>
	</bean>

	<!-- JMX stuff. Creates an MBeanServer. -->
	<bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
		<property name="locateExistingServerIfPossible" value="true" />
	</bean>

	<!-- JMX stuff. Creates an MBeanServer. -->
	<bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
		<property name="beans">
			<map>
				<entry key="pospServer:name=ioHandler">
					<ref local="depotPosProtocolHandler" />
				</entry>
			</map>
		</property>
		<property name="assembler">
			<bean
				class="org.springframework.jmx.export.assembler.MethodNameBasedMBeanInfoAssembler">
				<property name="managedMethods" value="getNumberOfSessions,getProcCount" />
			</bean>
		</property>
		<property name="server">
			<ref local="mbeanServer" />
		</property>
	</bean>

</beans>
